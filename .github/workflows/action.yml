name: Deploy to AWS Lambda with RDS

on:
  push:
    branches: [main]
  workflow_dispatch: # Permite ejecutar el workflow manualmente

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.16.0"
          cache: "npm" # Habilita caché para acelerar instalaciones

      - name: Install dependencies
        run: npm ci # Más rápido y seguro que npm install

      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Build TypeScript
        run: npm run build

      - name: Run database migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Prepare Lambda deployment package
        run: |
          mkdir -p lambda-package
          # Solo copiar lo necesario
          cp -r dist package.json prisma lambda-package/
          # Usar .production.env como .env para Lambda
          cp .production.env lambda-package/.env
          cd lambda-package
          # Instalar solo dependencias de producción
          npm ci --production
          npx prisma generate
          # Eliminar archivos innecesarios para reducir tamaño
          rm -rf node_modules/typescript node_modules/@types
          # Compresión
          cd ..
          zip -r function.zip lambda-package/

      - name: Deploy to AWS Lambda
        uses: appleboy/lambda-action@master
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws_region: us-east-1
          function_name: magapp-lambda
          zip_file: function.zip
          memory_size: 512 # Aumentado para mejor rendimiento con RDS
          timeout: 30 # Aumentado por posible latencia con RDS
          concurrency: 10 # Limita conexiones concurrentes
          publish: true # Publica una nueva versión
          environment: |
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            PORT=8000
            NODE_ENV=production
            # Variables optimizadas para DB
            DB_POOL_SIZE=1
            DB_CONNECTION_TIMEOUT=30000
            DB_IDLE_TIMEOUT=10000
            SSL_MODE=require # Para conexión segura a RDS
          layers: ${{ secrets.LAMBDA_LAYER_ARN }} # Opcional: usa una capa para dependencias comunes
          architecture: x86_64 # o arm64 para optimizar costos
